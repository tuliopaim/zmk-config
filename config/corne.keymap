/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LSHFT k1 &ht LCTRL k2  &ht LALT k3   &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht LALT k2   &ht RCTRL k3  &ht RSHFT k4

#define MAC 0
#define LEF 1
#define RIG 2
#define TRI 3

/ {
    behaviors {
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
        };
         ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };
        
    keymap {
            compatible = "zmk,keymap";

            default_layer {
    // -----------------------------------------------------------------------------------------
    // | ESC/~|  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
    // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
    // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ENT  |
    //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
    &gresc    &kp Q &kp W &kp E &kp R &kp T             &kp Y &kp U   &kp I      &kp O   &kp P    &kp BSPC
    &kp LSHFT HRML(A,   S,    D,   F) &kp G             &kp H HRMR(J,     K,         L,   SEMI)   &kp SQT
    &kp LCTRL &kp Z &kp X &kp C &kp V &kp B             &kp N &kp M   &kp COMMA  &kp PERIOD &kp FSLH &kp RET
                  &kp LGUI &mo LEF    &lt TRI SPACE   &kp RET &mo RIG &kp RALT
                        >;
                };
                left_layer {
    // -----------------------------------------------------------------------------------------
    // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
    // | CAPS |     |     |     |     |     |   | LFT | DWN |  UP | RGT |  -_ |  +=  |
    // | SHFT |     |     |     |     |     |   |     |     |     |     |  /| |      |
    //                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
    &kp TAB    &kp N1    &kp N2    &kp N3     &kp N4       &kp N5         &kp N6   &kp N7   &kp N8   &kp N9    &kp N0    &kp DEL
    &bt CAPS   &trans    &trans    &trans     &trans       &trans         &kp LARW &kp DARW &kp UARW &kp RARW  &kp MINUS &kp EQUAL
    &trans     &trans    &trans    &trans     &trans       &trans         &trans   &trans   &trans   &trans    &kp BSLH     &trans
                                   &kp LGUI     &trans     &kp SPACE    &kp RET  &trans   &kp RALT
                        >;
                };
                right_layer {
    // -----------------------------------------------------------------------------------------
    // |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
    // |      |     |  [  |  ]  |     |     |   |     |     |     |     |     |  `   |
    // |      |     |  {  |  }  |     |     |   |     |     |     |     |     |  ~   |
    //                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
    &trans &kp EXCL &kp AT   &kp HASH   &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &trans
    &trans &trans   &kp LBKT &kp RBKT   &trans   &trans      &trans    &trans    &trans    &trans   &trans   &kp GRAVE
    &trans &trans   &kp LBRC &kp RBRC   &trans   &trans      &trans    &trans    &trans    &trans   &trans   &trans
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                tri_layer {
    // --------------------------------------------------------------------------------------------------
    // |        |  F1 |  F2 |  F3  |  F4  |  F5   |   |  F6    | F7      | F8        | F9  |     | BSPC |
    // | BT_CLR | BT0 | BT1 | BT2  | PREV | NXT   |   | F10    | F11     | F12       |     |     |      |
    // |        |     |     | VMUT | VDWN | VUP   |   | PAUSE  | -BRIGHT |  +BRIGHT  |     |     |      |
    //                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
    &trans      &kp F1       &kp F2       &kp F3         &kp F4            &kp F5         &kp F6           &kp F7          &kp F8          &kp F9  &trans &kp BSPC
    &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2   &kp C_PREV        &kp C_NEXT     &kp F10          &kp F11         &kp F12         &trans  &trans &trans
    &trans      &trans       &trans       &kp C_MUTE     &kp C_VOL_DN    &kp C_VOL_UP     &kp C_PP         &kp C_BRI_DEC   &kp C_BRI_UP    &trans &trans &trans
                                  &kp LGUI     &trans       &kp SPACE   &kp RET  &trans   &kp RALT
                        >;
                };

        };
};
